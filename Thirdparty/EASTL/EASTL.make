# Generated by Sharpmake -- Do not edit !
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  CXX        = g++
  AR         = ar
  OBJDIR     = ../../bin/eastl
  TARGETDIR  = libs
  TARGET     = $(TARGETDIR)/libeastl.lib
  DEFINES   += -D_CRT_SECURE_NO_WARNINGS
  INCLUDES  += -Isrc/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) -g -Wall 
  CXXFLAGS  += $(CFLAGS) -fno-exceptions -fno-rtti 
  LDFLAGS   += 
  LIBS      +=  
  RESFLAGS  += $(DEFINES) $(INCLUDES)
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
  define POSTFILECMDS
  endef
endif

ifeq ($(config),debug)
  CXX        = g++
  AR         = ar
  OBJDIR     = ../../bin/eastl
  TARGETDIR  = libs
  TARGET     = $(TARGETDIR)/libeastl.lib
  DEFINES   += -D_CRT_SECURE_NO_WARNINGS
  INCLUDES  += -Isrc/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) -g -Wall 
  CXXFLAGS  += $(CFLAGS) -fno-exceptions -fno-rtti 
  LDFLAGS   += 
  LIBS      +=  
  RESFLAGS  += $(DEFINES) $(INCLUDES)
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
  define POSTFILECMDS
  endef
endif

ifeq ($(config),release)
  CXX        = g++
  AR         = ar
  OBJDIR     = ../../bin/eastl
  TARGETDIR  = libs
  TARGET     = $(TARGETDIR)/libeastl.lib
  DEFINES   += -D_CRT_SECURE_NO_WARNINGS
  INCLUDES  += -Isrc/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) -g -O3 -Wall 
  CXXFLAGS  += $(CFLAGS) -fno-exceptions -fno-rtti 
  LDFLAGS   += 
  LIBS      +=  
  RESFLAGS  += $(DEFINES) $(INCLUDES)
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
  define POSTFILECMDS
  endef
endif

ifeq ($(config),release)
  CXX        = g++
  AR         = ar
  OBJDIR     = ../../bin/eastl
  TARGETDIR  = libs
  TARGET     = $(TARGETDIR)/libeastl.lib
  DEFINES   += -D_CRT_SECURE_NO_WARNINGS
  INCLUDES  += -Isrc/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) -g -O3 -Wall 
  CXXFLAGS  += $(CFLAGS) -fno-exceptions -fno-rtti 
  LDFLAGS   += 
  LIBS      +=  
  RESFLAGS  += $(DEFINES) $(INCLUDES)
  LDDEPS    += 
  LINKCMD    = $(AR) -rcs $(TARGET) $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
  define POSTFILECMDS
  endef
endif

ifeq ($(config),debug)
  OBJECTS += $(OBJDIR)/EAMemory.o
  OBJECTS += $(OBJDIR)/EASprintf.o
  OBJECTS += $(OBJDIR)/EATest.o
  OBJECTS += $(OBJDIR)/allocator_eastl.o
  OBJECTS += $(OBJDIR)/assert.o
  OBJECTS += $(OBJDIR)/fixed_pool.o
  OBJECTS += $(OBJDIR)/hashtable.o
  OBJECTS += $(OBJDIR)/intrusive_list.o
  OBJECTS += $(OBJDIR)/numeric_limits.o
  OBJECTS += $(OBJDIR)/red_black_tree.o
  OBJECTS += $(OBJDIR)/string.o
  OBJECTS += $(OBJDIR)/thread_support.o

endif

ifeq ($(config),debug)
  OBJECTS += $(OBJDIR)/EAMemory.o
  OBJECTS += $(OBJDIR)/EASprintf.o
  OBJECTS += $(OBJDIR)/EATest.o
  OBJECTS += $(OBJDIR)/allocator_eastl.o
  OBJECTS += $(OBJDIR)/assert.o
  OBJECTS += $(OBJDIR)/fixed_pool.o
  OBJECTS += $(OBJDIR)/hashtable.o
  OBJECTS += $(OBJDIR)/intrusive_list.o
  OBJECTS += $(OBJDIR)/numeric_limits.o
  OBJECTS += $(OBJDIR)/red_black_tree.o
  OBJECTS += $(OBJDIR)/string.o
  OBJECTS += $(OBJDIR)/thread_support.o

endif

ifeq ($(config),release)
  OBJECTS += $(OBJDIR)/EAMemory.o
  OBJECTS += $(OBJDIR)/EASprintf.o
  OBJECTS += $(OBJDIR)/EATest.o
  OBJECTS += $(OBJDIR)/allocator_eastl.o
  OBJECTS += $(OBJDIR)/assert.o
  OBJECTS += $(OBJDIR)/fixed_pool.o
  OBJECTS += $(OBJDIR)/hashtable.o
  OBJECTS += $(OBJDIR)/intrusive_list.o
  OBJECTS += $(OBJDIR)/numeric_limits.o
  OBJECTS += $(OBJDIR)/red_black_tree.o
  OBJECTS += $(OBJDIR)/string.o
  OBJECTS += $(OBJDIR)/thread_support.o

endif

ifeq ($(config),release)
  OBJECTS += $(OBJDIR)/EAMemory.o
  OBJECTS += $(OBJDIR)/EASprintf.o
  OBJECTS += $(OBJDIR)/EATest.o
  OBJECTS += $(OBJDIR)/allocator_eastl.o
  OBJECTS += $(OBJDIR)/assert.o
  OBJECTS += $(OBJDIR)/fixed_pool.o
  OBJECTS += $(OBJDIR)/hashtable.o
  OBJECTS += $(OBJDIR)/intrusive_list.o
  OBJECTS += $(OBJDIR)/numeric_limits.o
  OBJECTS += $(OBJDIR)/red_black_tree.o
  OBJECTS += $(OBJDIR)/string.o
  OBJECTS += $(OBJDIR)/thread_support.o

endif

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking EASTL
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) if not exist $(subst /,\\,$(TARGETDIR)) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning EASTL
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)
endif

$(OBJDIR)/EAMemory.o: src/include/EAStdC/source/EAMemory.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/EASprintf.o: src/include/EAStdC/source/EASprintf.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/EATest.o: src/include/EATest/source/EATest.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/allocator_eastl.o: src/source/allocator_eastl.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/assert.o: src/source/assert.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/fixed_pool.o: src/source/fixed_pool.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/hashtable.o: src/source/hashtable.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/intrusive_list.o: src/source/intrusive_list.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/numeric_limits.o: src/source/numeric_limits.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/red_black_tree.o: src/source/red_black_tree.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/string.o: src/source/string.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

$(OBJDIR)/thread_support.o: src/source/thread_support.cpp | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
	$(SILENT) $(POSTFILECMDS)

-include $(OBJECTS:%.o=%.d)
